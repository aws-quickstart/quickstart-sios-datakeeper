AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template deploys two Windows Server Failover Clustering (WSFC) nodes with SQL
  Server 2014 and DataKeeper replication software. This template is intended to be
  installed into an existing VPC that was built using the sample reference architecture
  titled: "Implementing Active Directory Domain Services in the AWS Cloud" **WARNING**
  This template creates Amazon EC2 Windows instance and related resources. You will
  be billed for the AWS resources used if you create a stack from this template. QS(5033)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - PrivateSubnet1ID
          - PrivateSubnet1CIDR
          - PrivateSubnet2ID
          - PrivateSubnet2CIDR
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
      - Label:
          default: Microsoft Active Directory Configuration
        Parameters:
          - DomainDNSName
          - DomainNetBIOSName
          - DomainAdminUser
          - DomainAdminPassword
          - ADServer1NetBIOSName
          - ADServer1PrivateIP
          - ADServer2NetBIOSName
          - ADServer2PrivateIP
          - DomainMemberSGID
      - Label:
          default: Replication Configuration
        Parameters:
          - AMIType
          - SIOSLicenseKeyFtpURL
          - SQLServerVersion
          - SQLServiceAccount
          - SQLServiceAccountPassword
          - Volume1Size
          - Volume1Type
          - Volume1Iops
      - Label:
          default: Failover Cluster Configuration
        Parameters:
          - OSVersion
          - WSFCNode1InstanceType
          - WSFCNode1NetBIOSName
          - WSFCNode1PrivateIP1
          - WSFCNode1PrivateIP2
          - WSFCNode1PrivateIP3
          - WSFCNode2InstanceType
          - WSFCNode2NetBIOSName
          - WSFCNode2PrivateIP1
          - WSFCNode2PrivateIP2
          - WSFCNode2PrivateIP3
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      OSVersion:
        default: Cluster Node OS Version
      ADServer1NetBIOSName:
        default: Domain Controller 1 NetBIOS Name
      ADServer1PrivateIP:
        default: Domain Controller 1 Private IP Address
      ADServer2NetBIOSName:
        default: Domain Controller 2 NetBIOS Name
      ADServer2PrivateIP:
        default: Domain Controller 2 Private IP Address
      DomainAdminPassword:
        default: Domain Admin Password
      DomainAdminUser:
        default: Domain Admin User Name
      DomainDNSName:
        default: Domain DNS Name
      DomainMemberSGID:
        default: Security Group ID for AD domain members
      DomainNetBIOSName:
        default: Domain NetBIOS Name
      KeyPairName:
        default: Key Pair Name
      PrivateSubnet1ID:
        default: Private Subnet 1 ID
      PrivateSubnet1CIDR:
        default: Private Subnet 1 CIDR
      PrivateSubnet2ID:
        default: Private Subnet 2 ID
      PrivateSubnet2CIDR:
        default: Private Subnet 2 CIDR
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      SIOSLicenseKeyFtpURL:
        default: SIOS License Key FTP URL
      SQLServerVersion:
        default: SQL Server Version
      SQLServiceAccount:
        default: Service Account Name
      SQLServiceAccountPassword:
        default: Service Account Password
      Volume1Iops:
        default: Data Volume IOPS
      Volume1Size:
        default: Data Volume Size (GiB)
      Volume1Type:
        default: Data Volume Type
      VPCID:
        default: VPC to place SQL cluster in
      WSFCNode1InstanceType:
        default: Instance Type for Cluster Node 1
      WSFCNode1NetBIOSName:
        default: Cluster Node 1 NetBIOS Name
      WSFCNode1PrivateIP1:
        default: Cluster Node 1 Private IP Address 1
      WSFCNode1PrivateIP2:
        default: Cluster Node 1 Private IP Address 2
      WSFCNode1PrivateIP3:
        default: Cluster Node 1 Private IP Address 3
      WSFCNode2InstanceType:
        default: Instance Type for Cluster Node 2
      WSFCNode2NetBIOSName:
        default: Cluster Node 2 NetBIOS Name
      WSFCNode2PrivateIP1:
        default: Cluster Node 2 Private IP Address 1
      WSFCNode2PrivateIP2:
        default: Cluster Node 2 Private IP Address 2
      WSFCNode2PrivateIP3:
        default: Cluster Node 2 Private IP Address 3
      AMIType:
        default: SIOS AMI Version
Parameters:
  AMIType:
    AllowedValues:
      - PAYG
      - BYOL
    Default: PAYG
    Description: AMI type for SIOS license purposes.
    Type: String
  OSVersion:
    AllowedValues:
      - 2012R2
      - '2016'
    Default: 2012R2
    Description: Windows Server OS version to use for cluster nodes.
    Type: String
  ADServer1NetBIOSName:
    AllowedPattern: '[a-zA-Z0-9]+'
    Default: DC1
    Description: NetBIOS name of the first Active Directory server (up to 15 characters)
    MaxLength: '15'
    MinLength: '1'
    Type: String
  ADServer1PrivateIP:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    Default: 10.0.0.10
    Description: Fixed private IP for the first Active Directory server located in
      Availability Zone 1
    Type: String
  ADServer2NetBIOSName:
    AllowedPattern: '[a-zA-Z0-9]+'
    Default: DC2
    Description: NetBIOS name of the second Active Directory server (up to 15 characters)
    MaxLength: '15'
    MinLength: '1'
    Type: String
  ADServer2PrivateIP:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    Default: 10.0.32.10
    Description: Fixed private IP for the second Active Directory server located in
      Availability Zone 2
    Type: String
  DomainAdminPassword:
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: Password for the domain admin user. Must be at least 8 characters
      containing letters, numbers and symbols
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  DomainAdminUser:
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: siosadmin
    Description: User name for the account that will be used as Domain Administrator.
      This is separate from the default "Administrator" account
    MaxLength: '25'
    MinLength: '5'
    Type: String
  DomainDNSName:
    AllowedPattern: '[a-zA-Z0-9]+\..+'
    Default: datakeeper.local
    Description: Fully qualified domain name (FQDN) e.g. example.com
    MaxLength: '25'
    MinLength: '3'
    Type: String
  DomainMemberSGID:
    Description: ID of the Domain Member Security Group (e.g., sg-7f16e910)
    Type: AWS::EC2::SecurityGroup::Id
  DomainNetBIOSName:
    AllowedPattern: '[a-zA-Z0-9]+'
    Default: DATAKEEPER
    Description: NetBIOS name of the domain (up to 15 characters) for users of earlier
      versions of Windows e.g. EXAMPLE
    MaxLength: '15'
    MinLength: '1'
    Type: String
  KeyPairName:
    Description: Public/private key pairs allow you to securely connect to your instance
      after it launches
    Type: AWS::EC2::KeyPair::KeyName
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1.
    Type: String
  PrivateSubnet1ID:
    Description: ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2.
    Type: String
  PrivateSubnet2ID:
    Description: ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-sios-datakeeper/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  SIOSLicenseKeyFtpURL:
    Default: ''
    Description: URL used to obtain license key for SIOS DataKeeper software.
    Type: String
  SQLServerVersion:
    AllowedValues:
      - None
      - 2014SP1
    Default: 2014SP1
    Description: Version of MS SQL Server to install. Select 'None' if SQL Server
      is not desired.
    Type: String
  SQLServiceAccount:
    AllowedPattern: '[a-zA-Z0-9]*'
    Default: sqlsa
    Description: User name for the SQL Server Service Account. This Account is a Domain
      User.
    MaxLength: '25'
    MinLength: '5'
    Type: String
  SQLServiceAccountPassword:
    AllowedPattern: (?=^(?![\s\S]))|(?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: Password for the SQL Service account. Must be at least 8 characters
      containing letters, numbers and symbols. May be left blank if SQL Server is
      not desired.
    MaxLength: '32'
    MinLength: '0'
    NoEcho: 'true'
    Type: String
  VPCID:
    Description: ID of the VPC (e.g., vpc-0343606e)
    Type: AWS::EC2::VPC::Id
  Volume1Iops:
    Default: '1000'
    Description: Iops for the SQL Data drive (Only used when volume type is io1)
    MaxValue: '20000'
    MinValue: '100'
    Type: Number
  Volume1Size:
    Default: '100'
    Description: Volume size for the SQL Data drive
    MaxValue: '16000'
    MinValue: '100'
    Type: Number
  Volume1Type:
    AllowedValues:
      - gp2
      - io1
    Default: gp2
    Description: Volume type for the SQL Data drive
    Type: String
  WSFCNode1InstanceType:
    AllowedValues:
      - m3.xlarge
      - m3.2xlarge
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - g2.2xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
    ConstraintDescription: Only EBS Optimized instance types allowed
    Default: i3.xlarge
    Description: Amazon EC2 instance type for the 1st WSFC Node
    Type: String
  WSFCNode1NetBIOSName:
    AllowedPattern: '[a-zA-Z0-9]+'
    Default: WSFCNode1
    Description: NetBIOS name of the first WSFC Node (up to 15 characters)
    MaxLength: '15'
    MinLength: '1'
    Type: String
  WSFCNode1PrivateIP1:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    Default: 10.0.0.100
    Description: Primary private IP for the first WSFC Node located in Availability
      Zone 1
    Type: String
  WSFCNode1PrivateIP2:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    Default: 10.0.0.101
    Description: Secondary private IP for WSFC cluster on first WSFC Node
    Type: String
  WSFCNode1PrivateIP3:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    Default: 10.0.0.102
    Description: Third private IP for SQL Server Network Name on first WSFC Node
    Type: String
  WSFCNode2InstanceType:
    AllowedValues:
      - m3.xlarge
      - m3.2xlarge
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - g2.2xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
    ConstraintDescription: Only EBS Optimized instance types allowed
    Default: i3.xlarge
    Description: Amazon EC2 instance type for the 1st WSFC Node
    Type: String
  WSFCNode2NetBIOSName:
    AllowedPattern: '[a-zA-Z0-9]+'
    Default: WSFCNode2
    Description: NetBIOS name of the second WSFC Node (up to 15 characters)
    MaxLength: '15'
    MinLength: '1'
    Type: String
  WSFCNode2PrivateIP1:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    Default: 10.0.32.100
    Description: Primary private IP for the second WSFC Node located in Availability
      Zone 2
    Type: String
  WSFCNode2PrivateIP2:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    Default: 10.0.32.101
    Description: Secondary private IP for WSFC cluster on second WSFC Node
    Type: String
  WSFCNode2PrivateIP3:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
    Default: 10.0.32.102
    Description: Third private IP for SQL Server Network Name on second WSFC Node
    Type: String
Conditions:
  GovCloudCondition: !Equals
    - !Ref 'AWS::Region'
    - us-gov-west-1
  ByolAmiCondition: !Not
    - !Equals
      - !Ref 'AMIType'
      - PAYG
  SQLInstallCondition: !Not
    - !Equals
      - !Ref 'SQLServerVersion'
      - None
  OSVersionCondition: !Equals
    - !Ref 'OSVersion'
    - '2016'
Rules:
  SubnetsInVPC:
    Assertions:
      - Assert: !EachMemberIn
          - !ValueOfAll
            - AWS::EC2::Subnet::Id
            - VpcId
          - !RefAll 'AWS::EC2::VPC::Id'
        AssertDescription: All subnets must in the VPC
Mappings:
  AWSAMIRegionMap:
    AMI:
      SIOS2012R2: SIOS DataKeeper Cluster Edition v8.6.2 on Windows_Server-2012-R2_RTM-English-64Bit-Base-2018.08.15
      SIOS2012R2BYOL: SIOS DataKeeper Cluster Edition v8.6.2 on Windows_Server-2012-R2_RTM-English-64Bit-Base-2018.08.15
      SIOS2016: SIOS DataKeeper Cluster Edition v8.6.2 on Windows_Server-2016-English-Full-Base-2018.08.15
      SIOS2016BYOL: SIOS DataKeeper Cluster Edition v8.6.2 on Windows_Server-2016-English-Full-Base-2018.08.15
    us-east-1:
      SIOS2012R2: ami-02e6f621da0bae08b
      SIOS2012R2BYOL: ami-0914063ea217774c4
      SIOS2016: ami-04b1b600d091c2bed
      SIOS2016BYOL: ami-075267ad02646087b
    us-east-2:
      SIOS2012R2: ami-07fada8a4ba435e66
      SIOS2012R2BYOL: ami-0811d69dc832ac67f
      SIOS2016: ami-0173dad24bd812836
      SIOS2016BYOL: ami-0ce966417e91a6572
    us-west-1:
      SIOS2012R2: ami-01eaee550dad00f9f
      SIOS2012R2BYOL: ami-092a0d7a41e0b85ca
      SIOS2016: ami-0582455f51a2fb623
      SIOS2016BYOL: ami-028c36bee21047fd5
    us-west-2:
      SIOS2012R2: ami-039e7197f37142c8b
      SIOS2012R2BYOL: ami-0b829f4c829198efd
      SIOS2016: ami-02238923c9bf365b2
      SIOS2016BYOL: ami-09a67d20ba33605e5
    ca-central-1:
      SIOS2012R2: ami-0ed1d4b9642bd31df
      SIOS2012R2BYOL: ami-02013396fb9ec711b
      SIOS2016: ami-094d2039fb19715e8
      SIOS2016BYOL: ami-023f85b66716cadf1
    ap-south-1:
      SIOS2012R2: ami-071098e38548bfef3
      SIOS2012R2BYOL: ami-02a3788a25b232905
      SIOS2016: ami-06506cc16f050c488
      SIOS2016BYOL: ami-09085cae2727f52e1
    ap-northeast-2:
      SIOS2012R2: ami-0bdcb36e4cd91c241
      SIOS2012R2BYOL: ami-0fb10d2f276a30af9
      SIOS2016: ami-065b8c2ab615e96a1
      SIOS2016BYOL: ami-08d20dec9a3e2209f
    ap-southeast-1:
      SIOS2012R2: ami-0f04e24cff37e5213
      SIOS2012R2BYOL: ami-06f53888d262c01fb
      SIOS2016: ami-04ef73833d4250610
      SIOS2016BYOL: ami-06bf6e7a527572328
    ap-southeast-2:
      SIOS2012R2: ami-054d9a0eb01b6091f
      SIOS2012R2BYOL: ami-07be2331dc2be93bf
      SIOS2016: ami-0a32084cbe99ceba0
      SIOS2016BYOL: ami-0cabc3f0d13102905
    eu-central-1:
      SIOS2012R2: ami-0ba6f5bed834a46fb
      SIOS2012R2BYOL: ami-04d03eabc3a76520f
      SIOS2016: ami-0f957bc4e8c343781
      SIOS2016BYOL: ami-096dbd8893c033fe5
    eu-west-1:
      SIOS2012R2: ami-061c5ef1cc16b0f44
      SIOS2012R2BYOL: ami-04d87d67c319c92b4
      SIOS2016: ami-0bb556c0f1c5b1f60
      SIOS2016BYOL: ami-0fca63068ed3be059
    eu-west-2:
      SIOS2012R2: ami-03f4fbc40d266cd87
      SIOS2012R2BYOL: ami-07949f0ac4a4b483f
      SIOS2016: ami-0412943a6e835e3bf
      SIOS2016BYOL: ami-021470cbc21f0dac5
    eu-west-3:
      SIOS2012R2: ami-05251e98a1fdc681a
      SIOS2012R2BYOL: ami-05f88ef5b14d7a2f1
      SIOS2016: ami-091516f8d824007dc
      SIOS2016BYOL: ami-0eadca7420da9632c
    sa-east-1:
      SIOS2012R2: ami-085871be65e1563ff
      SIOS2012R2BYOL: ami-0c51f3830fd394b07
      SIOS2016: ami-0e02c9ac6f048656e
      SIOS2016BYOL: ami-0aa4187e9fc055de0
Resources:
  WSFCRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:ListBucket
                Resource: '*'
                Effect: Allow
              - Action:
                  - s3:GetObject
                Resource: '*'
                Effect: Allow
          PolicyName: aws-quick-start-s3-policy
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
            Effect: Allow
        Version: '2012-10-17'
  WSFCProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: WSFCRole
    Properties:
      Roles:
        - !Ref 'WSFCRole'
      Path: /
  WSFCNode1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !If
        - ByolAmiCondition
        - !If
          - OSVersionCondition
          - !FindInMap
            - AWSAMIRegionMap
            - !Ref 'AWS::Region'
            - SIOS2016BYOL
          - !FindInMap
            - AWSAMIRegionMap
            - !Ref 'AWS::Region'
            - SIOS2012R2BYOL
        - !If
          - OSVersionCondition
          - !FindInMap
            - AWSAMIRegionMap
            - !Ref 'AWS::Region'
            - SIOS2016
          - !FindInMap
            - AWSAMIRegionMap
            - !Ref 'AWS::Region'
            - SIOS2012R2
      IamInstanceProfile: !Ref 'WSFCProfile'
      InstanceType: !Ref 'WSFCNode1InstanceType'
      EbsOptimized: 'true'
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          DeviceIndex: 0
          SubnetId: !Ref 'PrivateSubnet1ID'
          PrivateIpAddresses:
            - Primary: 'true'
              PrivateIpAddress: !Ref 'WSFCNode1PrivateIP1'
            - Primary: 'false'
              PrivateIpAddress: !Ref 'WSFCNode1PrivateIP2'
            - Primary: 'false'
              PrivateIpAddress: !Ref 'WSFCNode1PrivateIP3'
          GroupSet:
            - !Ref 'DomainMemberSGID'
            - !Ref 'WSFCSecurityGroup'
            - !Ref 'WSFCClientSecurityGroup'
            - !Ref 'SIOSDataKeeperSG'
      Tags:
        - Key: Name
          Value: !Ref 'WSFCNode1NetBIOSName'
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '127'
            VolumeType: gp2
        - DeviceName: /dev/xvdca
          VirtualName: ephemeral0
      KeyName: !Ref 'KeyPairName'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - "$dir = $env:TEMP + \"\\ssm\"\n"
            - "New-Item -ItemType directory -Path $dir -Force\n"
            - "cd $dir\n"
            - (New-Object System.Net.WebClient).DownloadFile(
            - !Sub '"https://amazon-ssm-${AWS::Region}.s3.amazonaws.com/latest/windows_amd64/AmazonSSMAgentSetup.exe"'
            - ", $dir + \"\\AmazonSSMAgentSetup.exe\")\n"
            - Start-Process .\AmazonSSMAgentSetup.exe -ArgumentList @("/q", "/log",
              "install.log", "REGION=
            - !Sub '${AWS::Region}'
            - "\") -Wait\"\n"
            - "<powershell>\n"
  WSFCNode2:
    Type: AWS::EC2::Instance
    DependsOn:
      - WSFCNode1
    CreationPolicy:
      ResourceSignal:
        Timeout: PT60M
        Count: '1'
    Properties:
      ImageId: !If
        - ByolAmiCondition
        - !If
          - OSVersionCondition
          - !FindInMap
            - AWSAMIRegionMap
            - !Ref 'AWS::Region'
            - SIOS2016BYOL
          - !FindInMap
            - AWSAMIRegionMap
            - !Ref 'AWS::Region'
            - SIOS2012R2BYOL
        - !If
          - OSVersionCondition
          - !FindInMap
            - AWSAMIRegionMap
            - !Ref 'AWS::Region'
            - SIOS2016
          - !FindInMap
            - AWSAMIRegionMap
            - !Ref 'AWS::Region'
            - SIOS2012R2
      IamInstanceProfile: !Ref 'WSFCProfile'
      InstanceType: !Ref 'WSFCNode2InstanceType'
      EbsOptimized: 'true'
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          DeviceIndex: 0
          SubnetId: !Ref 'PrivateSubnet2ID'
          PrivateIpAddresses:
            - Primary: 'true'
              PrivateIpAddress: !Ref 'WSFCNode2PrivateIP1'
            - Primary: 'false'
              PrivateIpAddress: !Ref 'WSFCNode2PrivateIP2'
            - Primary: 'false'
              PrivateIpAddress: !Ref 'WSFCNode2PrivateIP3'
          GroupSet:
            - !Ref 'DomainMemberSGID'
            - !Ref 'WSFCSecurityGroup'
            - !Ref 'WSFCClientSecurityGroup'
            - !Ref 'SIOSDataKeeperSG'
      Tags:
        - Key: Name
          Value: !Ref 'WSFCNode2NetBIOSName'
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '127'
            VolumeType: gp2
        - DeviceName: /dev/xvdca
          VirtualName: ephemeral0
      KeyName: !Ref 'KeyPairName'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<powershell>\n"
            - "$dir = $env:TEMP + \"\\ssm\"\n"
            - "New-Item -ItemType directory -Path $dir -Force\n"
            - "cd $dir\n"
            - (New-Object System.Net.WebClient).DownloadFile(
            - !Sub '"https://amazon-ssm-${AWS::Region}.s3.amazonaws.com/latest/windows_amd64/AmazonSSMAgentSetup.exe"'
            - ", $dir + \"\\AmazonSSMAgentSetup.exe\")\n"
            - Start-Process .\AmazonSSMAgentSetup.exe -ArgumentList @("/q", "/log",
              "install.log", "REGION=
            - !Sub '${AWS::Region}'
            - "\") -Wait\"\n"
            - 'Start-SSMAutomationExecution -DocumentName '
            - !Sub '"${AWSQuickstartSIOSDKCE}"'
            - ' -Parameter @{'
            - '"AMIType"='
            - !Sub '"${AMIType}"'
            - ;"OSVersion"=
            - !Sub '"${OSVersion}"'
            - ;"ADServer1NetBIOSName"=
            - !Sub '"${ADServer1NetBIOSName}"'
            - ;"ADServer1PrivateIP"=
            - !Sub '"${ADServer1PrivateIP}"'
            - ;"ADServer2NetBIOSName"=
            - !Sub '"${ADServer2NetBIOSName}"'
            - ;"ADServer2PrivateIP"=
            - !Sub '"${ADServer2PrivateIP}"'
            - ;"DomainAdminPassword"=
            - !Sub '"${DomainAdminPassword}"'
            - ;"DomainAdminUser"=
            - !Sub '"${DomainAdminUser}"'
            - ;"DomainDNSName"=
            - !Sub '"${DomainDNSName}"'
            - ;"DomainNetBIOSName"=
            - !Sub '"${DomainNetBIOSName}"'
            - ;"PrivateSubnet1CIDR"=
            - !Sub '"${PrivateSubnet1CIDR}"'
            - ;"PrivateSubnet2CIDR"=
            - !Sub '"${PrivateSubnet2CIDR}"'
            - ;"SIOSLicenseKeyFtpURL"=
            - !Sub '"${SIOSLicenseKeyFtpURL}"'
            - ;"SQLServerVersion"=
            - !Sub '"${SQLServerVersion}"'
            - ;"SQLServiceAccount"=
            - !Sub '"${SQLServiceAccount}"'
            - ;"SQLServiceAccountPassword"=
            - !Sub '"${SQLServiceAccountPassword}"'
            - ;"WSFCNode1NetBIOSName"=
            - !Sub '"${WSFCNode1NetBIOSName}"'
            - ;"WSFCNode1PrivateIP1"=
            - !Sub '"${WSFCNode1PrivateIP1}"'
            - ;"WSFCNode1PrivateIP2"=
            - !Sub '"${WSFCNode1PrivateIP2}"'
            - ;"WSFCNode1PrivateIP3"=
            - !Sub '"${WSFCNode1PrivateIP3}"'
            - ;"WSFCNode2NetBIOSName"=
            - !Sub '"${WSFCNode2NetBIOSName}"'
            - ;"WSFCNode2PrivateIP1"=
            - !Sub '"${WSFCNode2PrivateIP1}"'
            - ;"WSFCNode2PrivateIP2"=
            - !Sub '"${WSFCNode2PrivateIP2}"'
            - ;"WSFCNode2PrivateIP3"=
            - !Sub '"${WSFCNode2PrivateIP3}"'
            - ;"QSS3BucketName"=
            - !Sub '"${QSS3BucketName}"'
            - ;"QSS3KeyPrefix"=
            - !Sub '"${QSS3KeyPrefix}"'
            - ;"StackName"=
            - !Sub '"${StackName}"'
            - ;"AutomationAssumeRole"=
            - !Sub '"arn:aws:iam::${AWS::AccountId}:role/${AWSQuickstartSIOSDKCERole}"'
            - '}'
            - "\n"
            - "<powershell>\n"
  WSFCNode1Volume1:
    Type: AWS::EC2::Volume
    Properties:
      Size: !Ref 'Volume1Size'
      VolumeType: !Ref 'Volume1Type'
      AvailabilityZone: !GetAtt 'WSFCNode1.AvailabilityZone'
  WSFCNode2Volume1:
    Type: AWS::EC2::Volume
    Properties:
      Size: !Ref 'Volume1Size'
      VolumeType: !Ref 'Volume1Type'
      AvailabilityZone: !GetAtt 'WSFCNode2.AvailabilityZone'
  WSFCNode1Volume1Attachment:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/xvdb
      InstanceId: !Ref 'WSFCNode1'
      VolumeId: !Ref 'WSFCNode1Volume1'
  WSFCNode2Volume1Attachment:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/xvdb
      InstanceId: !Ref 'WSFCNode2'
      VolumeId: !Ref 'WSFCNode2Volume1'
  SIOSDataKeeperSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Replication node communication
      VpcId: !Ref 'VPCID'
  SIOSDataKeeperSGIngressTCP137:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'SIOSDataKeeperSG'
      SourceSecurityGroupId: !Ref 'SIOSDataKeeperSG'
      IpProtocol: tcp
      FromPort: '137'
      ToPort: '139'
  SIOSDataKeeperSGIngressUDP137:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'SIOSDataKeeperSG'
      SourceSecurityGroupId: !Ref 'SIOSDataKeeperSG'
      IpProtocol: udp
      FromPort: '137'
      ToPort: '138'
  SIOSDataKeeperSGIngressTCP9999:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'SIOSDataKeeperSG'
      SourceSecurityGroupId: !Ref 'SIOSDataKeeperSG'
      IpProtocol: tcp
      FromPort: '9999'
      ToPort: '9999'
  SIOSDataKeeperSGIngressTCP10003:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'SIOSDataKeeperSG'
      SourceSecurityGroupId: !Ref 'SIOSDataKeeperSG'
      IpProtocol: tcp
      FromPort: '10003'
      ToPort: '10025'
  SIOSDataKeeperSGIngressTCP445:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'SIOSDataKeeperSG'
      SourceSecurityGroupId: !Ref 'SIOSDataKeeperSG'
      IpProtocol: tcp
      FromPort: '445'
      ToPort: '445'
  WSFCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable the WSFC and SQL AlwaysOn Availability Group communications
      VpcId: !Ref 'VPCID'
  WSFCSecurityGroupIngressIcmp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'WSFCSecurityGroup'
      SourceSecurityGroupId: !Ref 'WSFCSecurityGroup'
      IpProtocol: icmp
      FromPort: '-1'
      ToPort: '-1'
  WSFCSecurityGroupIngressTcp135:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'WSFCSecurityGroup'
      SourceSecurityGroupId: !Ref 'WSFCSecurityGroup'
      IpProtocol: tcp
      FromPort: '135'
      ToPort: '135'
  WSFCSecurityGroupIngressTcp137:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'WSFCSecurityGroup'
      SourceSecurityGroupId: !Ref 'WSFCSecurityGroup'
      IpProtocol: tcp
      FromPort: '137'
      ToPort: '137'
  WSFCSecurityGroupIngressTcp445:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'WSFCSecurityGroup'
      SourceSecurityGroupId: !Ref 'WSFCSecurityGroup'
      IpProtocol: tcp
      FromPort: '445'
      ToPort: '445'
  WSFCSecurityGroupIngressTcp1433:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'WSFCSecurityGroup'
      SourceSecurityGroupId: !Ref 'WSFCSecurityGroup'
      IpProtocol: tcp
      FromPort: '1433'
      ToPort: '1434'
  WSFCSecurityGroupIngressTcp3343:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'WSFCSecurityGroup'
      SourceSecurityGroupId: !Ref 'WSFCSecurityGroup'
      IpProtocol: tcp
      FromPort: '3343'
      ToPort: '3343'
  WSFCSecurityGroupIngressTcp5022:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'WSFCSecurityGroup'
      SourceSecurityGroupId: !Ref 'WSFCSecurityGroup'
      IpProtocol: tcp
      FromPort: '5022'
      ToPort: '5022'
  WSFCSecurityGroupIngressTcp5985:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'WSFCSecurityGroup'
      SourceSecurityGroupId: !Ref 'WSFCSecurityGroup'
      IpProtocol: tcp
      FromPort: '5985'
      ToPort: '5985'
  WSFCSecurityGroupIngressUdp137:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'WSFCSecurityGroup'
      SourceSecurityGroupId: !Ref 'WSFCSecurityGroup'
      IpProtocol: udp
      FromPort: '137'
      ToPort: '137'
  WSFCSecurityGroupIngressUdp3343:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'WSFCSecurityGroup'
      SourceSecurityGroupId: !Ref 'WSFCSecurityGroup'
      IpProtocol: udp
      FromPort: '3343'
      ToPort: '3343'
  WSFCSecurityGroupIngressUdp1434:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref 'WSFCSecurityGroup'
      SourceSecurityGroupId: !Ref 'WSFCSecurityGroup'
      IpProtocol: udp
      FromPort: '1434'
      ToPort: '1434'
  SQLServerAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'VPCID'
      GroupDescription: Allows access to SQL Servers
  WSFCClientSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SQL Client access ports
      VpcId: !Ref 'VPCID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '1433'
          ToPort: '1433'
          SourceSecurityGroupId: !Ref 'SQLServerAccessSecurityGroup'
Outputs:
  DomainAdmin:
    Value: !Join
      - ''
      - - !Ref 'DomainNetBIOSName'
        - \
        - !Ref 'DomainAdminUser'
    Description: Domain administrator account
  LocalAdmin:
    Value: Administrator
    Description: Please retrieve Administrator password of the instance
  WSFCNode1NetBIOSName:
    Value: !Ref 'WSFCNode1NetBIOSName'
    Description: NetBIOS name of the 1st WSFC Node
  WSFCNode2NetBIOSName:
    Value: !Ref 'WSFCNode2NetBIOSName'
    Description: NetBIOS name of the 2nd WSFC Node
  SQLServerAccessSecurityGroup:
    Value: !Ref 'SQLServerAccessSecurityGroup'
    Description: Add instances that require access to SQL to this Security Group
